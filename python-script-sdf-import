# Importing some important libraries
from rdkit import Chem
import rdkit
import pandas as pd
from IPython.utils import io
#Creating Variable that will contains the chembl data
sdf_file = 'chembl_31.sdf'

# Reading an archive .sdf in python
dsMol = Chem.SDMolSupplier('chembl_31.sdf')

#Just Testing
dsMol

# Creating a list to get all dicts 
CHMBLDB_all_dicts = []

# This loop gets all the atributes from a row of the DB and sets it to a dict
for x in range(len(dsMol)):
    globals()[f"CHMBLDB_dict_{x}"] = {
        "CHMBL_ID": None,
        "SMILES_Struct": None,
        "Mol_wheight": None,
        "Chem_LogP": None,
        "Acceptors_Num": None,
        "Donors_Num": None,
        "Formula": None,
        "Rotatables_Count": None,
        "Rings_Num": None,
        "Total_PSA": None, 
    }
    # This "try" command is necessary because some rows don't have all the necessary values acessed by the keys
    # so we need to skip them a catch the exception
    try:
        # This "with" command supresses the outputs that are generated when accessing the database rows 
        with io.capture_output() as captured:
            globals()[f"CHMBLDB_dict_{x}"]['CHMBLDB_ID'] =  dsMol[x].GetProp("CHEMBL_ID")
            globals()[f"CHMBLDB_dict_{x}"]['SMILES_Struct'] = dsMol[x].GetProp("CANONICAL_SMILES")
            globals()[f"CHMBLDB_dict_{x}"]['Mol_wheight'] = float(dsMol[x].GetProp("QED_WEIGHTED"))
            globals()[f"CHMBLDB_dict_{x}"]['Chem_LogP'] = float(dsMol[x].GetProp("ALOGP"))
            globals()[f"CHMBLDB_dict_{x}"]['Acceptors_Num'] = int(dsMol[x].GetProp("HBA"))
            globals()[f"CHMBLDB_dict_{x}"]['Donors_Num'] = int(dsMol[x].GetProp("HBD"))
            globals()[f"CHMBLDB_dict_{x}"]['Formula'] = dsMol[x].GetProp("FULL_MOLFORMULA")
            globals()[f"CHMBLDB_dict_{x}"]['Rotatables_Count'] = int(dsMol[x].GetProp("RTB"))
            globals()[f"CHMBLDB_dict_{x}"]['Rings_Num'] = int(dsMol[x].GetProp("AROMATIC_RINGS"))
            globals()[f"CHMBLDB_dict_{x}"]['Total_PSA'] = float(dsMol[x].GetProp("PSA"))
    # The AtributeError happens when the roll is completely NULL/ when the row is "NoneType"
    except AttributeError: 
        print(f"Element {x}: Empty")
        del globals()[f"CHMBLDB_dict_{x}"]
        pass
    # The KeyError happens when one of the row elements is NULL
    except KeyError:
        print(f"Element {x}: Invalid Value(s)")
        del globals()[f"CHMBLDB_dict_{x}"]
        pass
    else:
        CHMBLDB_all_dicts.append(globals()[f"CHMBLDB_dict_{x}"])
        
        # Here we concat all the dicts to form a bigger dict and turn them into a DataFrame
df = pd.concat([pd.Series(d) for d in CHMBLDB_all_dicts], axis=1).fillna(0).T

# For last, the DataFrame is converted into a .csv file
# The items are divided by ";" 
df.to_csv('CHMBLDB_items.csv', encoding = 'utf-8', sep = ";", header = True)

